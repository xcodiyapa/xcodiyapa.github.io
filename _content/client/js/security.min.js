const t=n=>window.btoa(String.fromCharCode(...new Uint8Array(n))),n=n=>{let t=window.atob(n),i=t.length,r=new Uint8Array(i);for(let n=0;n<i;n++)r[n]=t.charCodeAt(n);return r.buffer},r=async()=>window.crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),u=async n=>t(await window.crypto.subtle.exportKey("raw",n)),f=()=>t(window.crypto.getRandomValues(new Uint8Array(12))),i=async t=>window.crypto.subtle.importKey("raw",n(t),"AES-GCM",!0,["encrypt","decrypt"]);export const encrypt=async e=>{let o=f(),h=n(o),c=await r(),s=await u(c),l=await i(s),a=(new TextEncoder).encode(JSON.stringify(e),"utf-8"),v=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:h},l,a),y=t(v);return{key:s,vector:o,result:y}},decrypt=async(t,r,u)=>{let f=await i(t),e=n(r),o=n(u),s=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:e},f,o);return JSON.parse((new TextDecoder).decode(s))},decryptText=async(t,r,u)=>{let f=await i(t),e=n(r),o=n(u),s=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:e},f,o);return(new TextDecoder).decode(s)};