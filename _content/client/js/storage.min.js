const r=n=>window.btoa(String.fromCharCode(...new Uint8Array(n))),t=n=>{let t=window.atob(n),i=t.length,r=new Uint8Array(i);for(let n=0;n<i;n++)r[n]=t.charCodeAt(n);return r.buffer},i=n=>window.crypto.subtle.importKey("raw",t(n),"AES-GCM",!0,["encrypt","decrypt"]),n=async(n,u)=>{try{let f=await i(n.substr(16)),e=t(n.substr(0,16)),o=(new TextEncoder).encode(JSON.stringify(u),"utf-8"),s=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:e},f,o);return r(s)}catch(f){return console.error("Failed to encrypt: ",f),null}},u=async(n,r)=>{try{let u=await i(n.substr(16)),f=t(n.substr(0,16)),e=t(r),o=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:f},u,e);return JSON.parse((new TextDecoder).decode(o))}catch(u){return console.error("Failed to decrypt: ",u),null}},f=()=>import("https://openfpcdn.io/fingerprintjs/v3").then(n=>n.load()).then(n=>n.get()).then(n=>n.visitorId).catch(()=>"");export const getFingerprint=()=>new Promise((n,t)=>f().then(t=>n(t)).catch(()=>t(""))),setStorage=(t,i,r,u)=>new Promise(async(f,e)=>{try{let e=await n(t,i),o=await n(t,r);u?window.localStorage.setItem(e,o):window.sessionStorage.setItem(e,o);f(!0)}catch(o){console.error("Failed to set storage: ",o);e(!1)}}),getStorage=(t,i,r)=>new Promise(async(f,e)=>{try{let e=await n(t,i),o=r?window.localStorage.getItem(e):window.sessionStorage.getItem(e);if(o){let n=await u(t,o);f(n)}else f(null)}catch(o){console.error("Failed to get storage: ",o);e(null)}}),hasStorageValue=(t,i,r)=>new Promise(async(u,f)=>{try{let f=await n(t,i),e=r?window.localStorage.getItem(f):window.sessionStorage.getItem(f);e?u(!0):u(!1)}catch(e){console.error("Failed to check storage: ",e);f(!1)}}),removeStorage=(t,i,r)=>new Promise(async(u,f)=>{try{let f=await n(t,i);r?window.localStorage.removeItem(f):window.sessionStorage.removeItem(f);u(!0)}catch(e){console.error("Failed to remove storage: ",e);f(!1)}}),clearStorage=n=>new Promise(async(t,i)=>{try{window.sessionStorage.clear();n&&window.localStorage.clear();t(!0)}catch(r){console.error("Failed to clear storage: ",r);i(!1)}});